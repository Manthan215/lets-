{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# importing dependencies\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from matplotlib import pyplot as plt\n",
    "from sklearn.datasets import load_boston"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Boston House Prices dataset\n",
      "===========================\n",
      "\n",
      "Notes\n",
      "------\n",
      "Data Set Characteristics:  \n",
      "\n",
      "    :Number of Instances: 506 \n",
      "\n",
      "    :Number of Attributes: 13 numeric/categorical predictive\n",
      "    \n",
      "    :Median Value (attribute 14) is usually the target\n",
      "\n",
      "    :Attribute Information (in order):\n",
      "        - CRIM     per capita crime rate by town\n",
      "        - ZN       proportion of residential land zoned for lots over 25,000 sq.ft.\n",
      "        - INDUS    proportion of non-retail business acres per town\n",
      "        - CHAS     Charles River dummy variable (= 1 if tract bounds river; 0 otherwise)\n",
      "        - NOX      nitric oxides concentration (parts per 10 million)\n",
      "        - RM       average number of rooms per dwelling\n",
      "        - AGE      proportion of owner-occupied units built prior to 1940\n",
      "        - DIS      weighted distances to five Boston employment centres\n",
      "        - RAD      index of accessibility to radial highways\n",
      "        - TAX      full-value property-tax rate per $10,000\n",
      "        - PTRATIO  pupil-teacher ratio by town\n",
      "        - B        1000(Bk - 0.63)^2 where Bk is the proportion of blacks by town\n",
      "        - LSTAT    % lower status of the population\n",
      "        - MEDV     Median value of owner-occupied homes in $1000's\n",
      "\n",
      "    :Missing Attribute Values: None\n",
      "\n",
      "    :Creator: Harrison, D. and Rubinfeld, D.L.\n",
      "\n",
      "This is a copy of UCI ML housing dataset.\n",
      "http://archive.ics.uci.edu/ml/datasets/Housing\n",
      "\n",
      "\n",
      "This dataset was taken from the StatLib library which is maintained at Carnegie Mellon University.\n",
      "\n",
      "The Boston house-price data of Harrison, D. and Rubinfeld, D.L. 'Hedonic\n",
      "prices and the demand for clean air', J. Environ. Economics & Management,\n",
      "vol.5, 81-102, 1978.   Used in Belsley, Kuh & Welsch, 'Regression diagnostics\n",
      "...', Wiley, 1980.   N.B. Various transformations are used in the table on\n",
      "pages 244-261 of the latter.\n",
      "\n",
      "The Boston house-price data has been used in many machine learning papers that address regression\n",
      "problems.   \n",
      "     \n",
      "**References**\n",
      "\n",
      "   - Belsley, Kuh & Welsch, 'Regression diagnostics: Identifying Influential Data and Sources of Collinearity', Wiley, 1980. 244-261.\n",
      "   - Quinlan,R. (1993). Combining Instance-Based and Model-Based Learning. In Proceedings on the Tenth International Conference of Machine Learning, 236-243, University of Massachusetts, Amherst. Morgan Kaufmann.\n",
      "   - many more! (see http://archive.ics.uci.edu/ml/datasets/Housing)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# understanding the dataset\n",
    "boston = load_boston()\n",
    "print(boston.DESCR)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CRIM 0\n",
      "ZN 1\n",
      "INDUS 2\n",
      "CHAS 3\n",
      "NOX 4\n",
      "RM 5\n",
      "AGE 6\n",
      "DIS 7\n",
      "RAD 8\n",
      "TAX 9\n",
      "PTRATIO 10\n",
      "B 11\n",
      "LSTAT 12\n"
     ]
    }
   ],
   "source": [
    "# acess data attributes\n",
    "dataset = boston.data\n",
    "for name, index in enumerate(boston.feature_names):\n",
    "     print(index, name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# reshaping data\n",
    "data = dataset[:,12].reshape(-1,1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(506, 13)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# shape of the data\n",
    "np.shape(dataset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "#target values\n",
    "target = boston.target.reshape(-1,1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(506, 1)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# shape of target\n",
    "np.shape(target)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# ensuring that matplotlib is working inside the notebook\n",
    "%matplotlib inline\n",
    "plt.scatter(data,target,color='green')\n",
    "plt.xlabel('lower income population')\n",
    "plt.ylabel('cost of house')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=1, normalize=False)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# regression\n",
    "from sklearn.linear_model import LinearRegression\n",
    "\n",
    "#creating a regression model\n",
    "reg = LinearRegression()\n",
    "\n",
    "#fit the model\n",
    "reg.fit(data,target)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# prediction\n",
    "pred = reg.predict(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# ensuring that matplotlib is working inside the notebook\n",
    "%matplotlib inline\n",
    "plt.scatter(data,target,color='green')\n",
    "plt.xlabel('lower income population')\n",
    "plt.ylabel('cost of house')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "# circumventing curve issue using polynomial model\n",
    "from sklearn.preprocessing import PolynomialFeatures\n",
    "\n",
    "# to allow merging of models\n",
    "from sklearn.pipeline import make_pipeline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "model = make_pipeline(PolynomialFeatures(4), reg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Pipeline(memory=None,\n",
       "     steps=[('polynomialfeatures', PolynomialFeatures(degree=3, include_bias=True, interaction_only=False)), ('linearregression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=1, normalize=False))])"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(data,target)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "pred = model.predict(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# ensuring that matplotlib is working inside the notebook\n",
    "%matplotlib inline\n",
    "plt.scatter(data,target,color='red')\n",
    "plt.plot(data,pred,color='green')\n",
    "plt.xlabel('lower income population')\n",
    "plt.ylabel('cost of house')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "# r_2 metric\n",
    "from sklearn.metrics import r2_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.47989118102755735"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# predict\n",
    "r2_score(pred,target)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
